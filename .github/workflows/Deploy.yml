name: Databricks Notebooks Deployment

on:
  push:
    branches:
      - main
      - feature_dab

jobs:
  deploy-notebooks:
    runs-on: windows-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history if needed
      
      # Step 2: Install Databricks CLI
      - name: Install Databricks CLI
        shell: pwsh
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
          iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          choco install databricks-cli -y
          
      # Step 3: Configure Databricks authentication
      - name: Configure Databricks authentication
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path $env:USERPROFILE\.databricks
          @"
          [PROD]
          host = "${{ vars.PROD_DATABRICKS_HOST }}"
          client_id = "${{ vars.DATABRICKS_CLIENT_ID }}"
          client_secret = "${{ secrets.DATABRICKS_CLIENT_SECRET }}"
          [QA]
          host = "${{ vars.QA_DATABRICKS_HOST }}"
          client_id = "${{ vars.DATABRICKS_CLIENT_ID }}"
          client_secret = "${{ secrets.DATABRICKS_CLIENT_SECRET }}"
          "@ | Out-File -FilePath "$env:USERPROFILE\.databrickscfg" -Encoding utf8
          icacls "$env:USERPROFILE\.databrickscfg" /inheritance:r /grant:r "$env:USERNAME:F"
          databricks auth profiles

      # Step 4:  Summarize Databricks Bundle
      - name: Summarize the Deployment List
        shell: pwsh
        run: |
          # Check if folders exist and navigate
          if (Test-Path "Databricks-DAB") {
            cd Databricks-DAB
          } elseif (Test-Path "AmalDatabricksDAB") {
            cd AmalDatabricksDAB
          }
          
          databricks bundle summary -t dev
          
      #step 5: Deploy Databricks Bundle
      - name:  Deploy Databricks Asset Bundle
        shell: pwsh
        run: |
          # Check if folders exist and navigate
          if (Test-Path "Databricks-DAB") {
            cd Databricks-DAB
          } elseif (Test-Path "AmalDatabricksDAB") {
            cd AmalDatabricksDAB
          }
          databricks bundle deploy -t dev
